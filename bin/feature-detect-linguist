#!/usr/bin/env ruby

# linguist â€” detect language type for a file, or, given a directory, determine language breakdown
#     usage: linguist <path> [<--breakdown>]
#
require 'linguist'
require 'rugged'
require 'json'

path = ARGV[0] || Dir.pwd

if File.directory?(path)
  rugged = Rugged::Repository.new(path)
  repo = Linguist::Repository.new(rugged, rugged.head.target_id)

  results = repo.languages.sort_by { |_, size| size }.reverse.reduce({}) do |dict, lang_size|
    language, size = lang_size

    dict[language] = {
      feature: language, # Feature name
      categories: ['Language'],
      engine: 'github-linguist',
      files: [],
      meta: {
        size: size,
        ratio: (size / repo.size.to_f),
        total: repo.size
      }
    }

    dict
  end

  repo.breakdown_by_file.each do |language, files|
    results[language][:files] += files
  end


  puts JSON.generate(results.values)

elsif File.file?(path)
  blob = Linguist::FileBlob.new(path, Dir.pwd)
  type = if blob.text?
    'Text'
  elsif blob.image?
    'Image'
  else
    'Binary'
  end

  puts "#{blob.name}: #{blob.loc} lines (#{blob.sloc} sloc)"
  puts "  type:      #{type}"
  puts "  mime type: #{blob.mime_type}"
  puts "  language:  #{blob.language}"

  if blob.large?
    puts "  blob is too large to be shown"
  end

  if blob.generated?
    puts "  appears to be generated source code"
  end

  if blob.vendored?
    puts "  appears to be a vendored file"
  end
else
  abort "usage: linguist <path>"
end
